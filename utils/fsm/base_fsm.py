"""Этот модуль предоставляет класс `BaseFiniteStateMachine`, который представляет конечный автомат для управления состоянием пользователя.

Классы:

- `BaseFiniteStateMachine`: Класс, представляющий конечный автомат. Он содержит методы для перехода к следующему состоянию и возврата к предыдущему состоянию. Класс имеет следующие методы:

  - `__init__(self, user, states)`: Конструктор класса, принимающий объект пользователя `user` и список состояний `states`. Устанавливает начальное состояние пользователя и инициализирует переменную `step` для отслеживания текущего шага в автомате.

  - `next_state(self)`: Метод для перехода к следующему состоянию. Увеличивает значение переменной `step` и обновляет состояние пользователя.

  - `old_state(self)`: Метод для возврата к предыдущему состоянию. Уменьшает значение переменной `step`, чтобы вернуться к предыдущему шагу. Обновляет состояние пользователя в соответствии со значением `step`. Если `step` становится меньше или равным нулю, устанавливает состояние пользователя первым элементом из списка состояний.

Параметры:

- `user`: Объект пользователя, для которого управляется состояние.

- `states`: Список состояний, доступных в конечном автомате. Каждое состояние представлено элементом списка.

Примечания:

- Класс `BaseFiniteStateMachine` не содержит логику переходов между состояниями. Он предоставляет только основные методы для управления состоянием пользователя. Логика переходов должна быть реализована в классах, которые наследуют от `BaseFiniteStateMachine`.

- При использовании класса `BaseFiniteStateMachine` предполагается, что каждое состояние пользователя имеет уникальное идентификаторное значение.
"""


class BaseFiniteStateMachine:
    def __init__(self, user, states):
        self.user = user
        self.states = states
        self.step = 0
        self.user.state = self.states[0]

    def next_state(self):
        self.step += 1
        self.user.state = self.states[self.step]

    def old_state(self):
        self.step -= 1

        if self.step > 0:
            self.user.state = self.states[self.step]
        else:
            self.user.state = self.states[0]
